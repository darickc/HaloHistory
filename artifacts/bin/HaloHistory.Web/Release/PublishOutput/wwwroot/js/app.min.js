"use strict";var mod=angular.module("cartographer",["ui.router","ngAnimate","ngResource","ngSanitize","angularUtils.directives.dirPagination","angular-loading-bar","ngScrollTo"]).config(["$stateProvider","$urlRouterProvider","$locationProvider",function(n,r,e){r.otherwise("/"),e.html5Mode(!0).hashPrefix("!")}]).run(function(n){n.$on("$stateChangeSuccess",function(r,e,t,a,i){var o=e.name.split(".");o.length&&(n.containerClass=o[o.length-1]+"State")})});
!function(){"use strict";angular.module("cartographer").config(["$stateProvider",function(a){a.state("main",{url:"/",templateUrl:"app/main/main.html",controller:"main as vm",params:{error:null}}).state("main.player",{url:"{gamerTag}/",templateUrl:"app/player/player.html",controller:"player as vm",resolve:{playerData:function(a,r){return a.getSpartanImageForUser(r.gamerTag)}}}).state("main.player.gameHistory",{url:"game-history/{mode}/?start",templateUrl:"app/gameHistory/gameHistory.html",controller:"gameHistory as vm"}).state("main.player.gameHistory.match",{url:"match/{gameMode}/{id}/",templateUrl:"app/match/match.html",controller:"match as vm"})}])}();
!function(){"use strict";function n(){return function(n){return n.replace(/([a-z])([A-Z])/g,"$1 $2")}}angular.module("cartographer").filter("addspace",n).directive("goTo",["ScrollTo","$timeout",function(n,t){return{restrict:"AC",compile:function(){return function(r,o,c){o.bind("click",function(r){t(function(){n.idOrName(c.goTo,c.offset)},50)})}}}}])}();
!function(){"use strict";function r(r,e){function i(e){if(o.profiles[e]){var i=r.defer();return i.resolve(o.profiles[e]),i.promise}return o.profiles[e]=t.get({id:e}),o.profiles[e].$promise}var o=this;o.profiles=[];var t=e("api/profile/:id",{},{});return{getSpartanImageForUser:i}}angular.module("cartographer").factory("profileDataService",r),r.$inject=["$q","$resource"]}();
!function(){"use strict";function t(t,a){function e(t,a,e){return s.get({id:t,gameMode:a,start:e}).$promise}function r(t,a,e){return s.match({gamerTag:t,gameMode:a,id:e}).$promise}var s=a("api/stats/matches/:id/:gameMode?start=:start",{},{match:{url:"api/stats/matches/:gamerTag/:gameMode/:id",isArray:!1}});return{getMatchesForUser:e,getMatch:r}}angular.module("cartographer").factory("statsDataService",t),t.$inject=["$q","$resource"]}();
!function(){"use strict";function e(e,a){function r(){if(m.canRemember="undefined"!=typeof Storage,m.error=a.error,m.canRemember&&e.is("main")){var r=localStorage.getItem("gamerTag");r&&e.go("main.player.gameHistory",{gamerTag:r,mode:"All"})}}function t(a){return a.$valid?(m.rememberMe&&localStorage.setItem("gamerTag",m.gamerTag),void e.go("main.player.gameHistory",{gamerTag:m.gamerTag,mode:"All"})):void(a.submitted=!0)}var m=this;m.title="main",m.setUser=t,m.$state=e,m.gamerTag="barnyard gnome",r()}angular.module("cartographer").controller("main",e),e.$inject=["$state","$stateParams"]}();
!function(){"use strict";function t(t,a,e){function r(){c()}function n(t){i.start=null,i.gameMode=t,c()}function o(t){0>t&&(t=0),i.start=t,c()}function s(t){i.start=t,c()}function c(){a.getMatchesForUser(t.gamertag,e.mode,e.start).then(function(t){i.matches=t,i.start=t.start})["catch"](function(){})}var i=this;i.title="gameHistory",i.start=0,i.getMatchesForGamemode=n,i.next=o,i.prev=s,r()}angular.module("cartographer").controller("gameHistory",t),t.$inject=["playerData","statsDataService","$stateParams"]}();
!function(){"use strict";function a(a,e){function r(){a.gamertag||(localStorage.removeItem("gamerTag"),e.go("main",{error:!0}))}function t(){localStorage.removeItem("gamerTag"),e.go("main")}var o=this;o.change=t,o.player=a,r()}angular.module("cartographer").controller("player",a),a.$inject=["playerData","$state"]}();
!function(){"use strict";function e(e,a,t){function n(){e.getMatch(a.gamerTag,a.gameMode,a.id).then(function(e){o.match=e,angular.forEach(e.teams,function(e){angular.forEach(e.players,function(e){c(e),angular.forEach(e.enemies,function(e){e.isPlayer&&l(e)})})})})["catch"](function(){})}function r(e){return null!=o.selectedPlayer&&(o.selectedPlayer.showDetails=!1,o.selectedPlayer.gamerTag===e.gamerTag)?void(o.selectedPlayer=null):(o.selectedPlayer=e,void(o.selectedPlayer.showDetails=!0))}function c(e){t.getSpartanImageForUser(e.gamerTag).then(function(a){e.profile=a})["catch"]()}function l(e){t.getSpartanImageForUser(e.name).then(function(a){e.profile=a})["catch"]()}var o=this;o.selectedPlayer=null,o.showDetails=r,n()}angular.module("cartographer").controller("match",e),e.$inject=["statsDataService","$stateParams","profileDataService"]}();